{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGClBf,eAIA,oBAAyBQ,GAOrB,IAAIC,EAAOC,EAAOC,SAASC,gBAAgB,6BAA8BC,IACrEH,EAAOC,SAASG,eAAe,oBAAqBD,GAAG,MAGvDE,EAAOL,EAAOC,SAASC,gBAAgB,yBAA0BC,IACjEH,EAAOC,SAASG,eAAe,oBAAqBD,GAAG,MAG3DL,EAAQQ,cAAcC,KAAKR,GAC3BD,EAAQQ,cAAcC,KAAKF,IAI/B,2B","sources":["../external \"vscode\"","../webpack/bootstrap",".././src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    //console.log('vscode-opennewinstance is now active');\n\n    // The explorer/context menu contribution receives the URI to the file/folder\n    let cmd1 = vscode.commands.registerCommand('extension.openNewInstance', (e: vscode.Uri) => {\n        vscode.commands.executeCommand(\"vscode.openFolder\", e, true);\n    });\n\n    let cmd2 = vscode.commands.registerCommand('extension.scopeToHere', (e: vscode.Uri) => {\n        vscode.commands.executeCommand(\"vscode.openFolder\", e, false);\n    });\n\n    context.subscriptions.push(cmd1);\n    context.subscriptions.push(cmd2);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","cmd1","vscode","commands","registerCommand","e","executeCommand","cmd2","subscriptions","push"],"sourceRoot":""}