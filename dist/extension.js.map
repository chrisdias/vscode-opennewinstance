{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCnBA,eAIA,oBAAyBQ,GAGrB,IADc,qBACHC,KAAKC,EAAOC,IAAIC,SAEvB,YADAF,EAAOG,OAAOC,iBAAiB,gEAAiE,CAAEC,OAAO,IAK7G,MAAMC,EAAON,EAAOO,SAASC,gBAAgB,6BAA8BC,IACvET,EAAOO,SAASG,eAAe,oBAAqBD,GAAG,EAAK,IAG1DE,EAAOX,EAAOO,SAASC,gBAAgB,yBAA0BC,IACnET,EAAOO,SAASG,eAAe,oBAAqBD,GAAG,EAAM,IAGjEX,EAAQc,cAAcC,KAAKP,GAC3BR,EAAQc,cAAcC,KAAKF,EAC/B,EAGA,wBAA8B,C","sources":["../external commonjs \"vscode\"","../webpack/bootstrap",".././src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n    const regex = /Visual Studio Code/;\n    if (!regex.test(vscode.env.appName)) {\n        vscode.window.showErrorMessage(\"The Open Folder extension only works with Visual Studio Code.\", { modal: true });\n        return;\n    }\n\n    // The explorer/context menu contribution receives the URI to the file/folder\n    const cmd1 = vscode.commands.registerCommand('extension.openNewInstance', (e: vscode.Uri) => {\n        vscode.commands.executeCommand(\"vscode.openFolder\", e, true);\n    });\n\n    const cmd2 = vscode.commands.registerCommand('extension.scopeToHere', (e: vscode.Uri) => {\n        vscode.commands.executeCommand(\"vscode.openFolder\", e, false);\n    });\n\n    context.subscriptions.push(cmd1);\n    context.subscriptions.push(cmd2);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","test","vscode","env","appName","window","showErrorMessage","modal","cmd1","commands","registerCommand","e","executeCommand","cmd2","subscriptions","push"],"sourceRoot":""}